name: Build and Deploy

on:
  push:
    tags:
      - 'v*'

env:
  DOTNET_VERSION: '6.0'

jobs:  
  preparing_for_release:
    name: Preparing
    runs-on: ubuntu-latest
    outputs:
      major: ${{ steps.version.outputs.major }}
      minor: ${{ steps.version.outputs.minor }}
      patch: ${{ steps.version.outputs.patch }}
    steps:
      - name: Parse version from tag
        id: semver_parser
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.ref_name }}
      
      - name: Set parsed version to job output
        id: version
        run: |
          echo "major=${{ steps.semver_parser.outputs.major }}" >> "$GITHUB_OUTPUT"
          echo "minor=${{ steps.semver_parser.outputs.minor }}" >> "$GITHUB_OUTPUT"
          echo "patch=${{ steps.semver_parser.outputs.patch }}" >> "$GITHUB_OUTPUT"
  
  build_and_publish_windows:
    name: Build and Deploy (win-x64)
    runs-on: windows-latest
    needs: [preparing_for_release]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Update versions inside fsproj
        uses: vers-one/dotnet-project-version-updater@v1.3
        with:
          file: src/Skillaz.SecureChat.fsproj
          version: ${{ needs.preparing_for_release.outputs.major }}.${{ needs.preparing_for_release.outputs.minor }}.${{ needs.preparing_for_release.outputs.patch }}

      - name: Build binaries
        run: dotnet publish -c Release -r win-x64 --self-contained
        
      - name: Build .exe installer
        uses: nadeemjazmawe/inno-setup-action-cli@v6.0.5
        with:
          filepath: src/windows-installer/installer.iss
        
      - name: Publish .exe installer
        uses: actions/upload-artifact@v3
        with:
          name: win-x64-installer
          path: src/windows-installer/Output/*.exe
          retention-days: 1
      
  build_and_publish_linux:
    name: Build and Deploy (ubuntu-x64,fedora-x64)
    runs-on: ubuntu-latest
    needs: [preparing_for_release]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Update versions inside fsproj
        uses: vers-one/dotnet-project-version-updater@v1.3
        with:
          file: src/Skillaz.SecureChat.fsproj
          version: ${{ needs.preparing_for_release.outputs.major }}.${{ needs.preparing_for_release.outputs.minor }}.${{ needs.preparing_for_release.outputs.patch }}

      - name: Install .deb packaging tools
        run: |
          echo "Install dotnet-deb tool..."
          dotnet tool install --global dotnet-deb
          echo "dotnet-deb tool installed. Preparing solution..."
          dotnet deb install

      - name: Build .deb installer
        working-directory: ./src
        run: dotnet deb -r ubuntu-x64 -c Release

      - name: Publish .deb installer
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-x64-installer
          path: ./src/bin/Release/net${{ env.DOTNET_VERSION }}/ubuntu-x64/*.deb
          retention-days: 1

      - name: Install .rpm packaging tools
        run: |
          echo "Install dotnet-rpm tool..."
          dotnet tool install --global dotnet-rpm
          echo "dotnet-rpm tool installed. Preparing solution..."
          dotnet rpm install

      - name: Build .rpm installer
        working-directory: ./src
        run: dotnet rpm -r fedora-x64 -c Release

      - name: Publish .rpm installer
        uses: actions/upload-artifact@v3
        with:
          name: fedora-x64-installer
          path: ./src/bin/Release/net${{ env.DOTNET_VERSION }}/fedora-x64/*.rpm
          retention-days: 1
      
  build_and_publish_macos:
    name: Build and Deploy (osx-x64)
    runs-on: macos-latest
    needs: [preparing_for_release]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Update versions inside fsproj
        uses: vers-one/dotnet-project-version-updater@v1.3
        with:
          file: src/Skillaz.SecureChat.fsproj
          version: ${{ needs.preparing_for_release.outputs.major }}.${{ needs.preparing_for_release.outputs.minor }}.${{ needs.preparing_for_release.outputs.patch }}
      
      - name: Update versions inside Info.plist
        uses: damienaicheh/update-ios-version-info-plist-action@v1.0.0
        with:
          info-plist-path: "src/osx-installer/SSC.app/Contents/Info.plist"
          bundle-short-version-string: ${{ needs.preparing_for_release.outputs.major }}.${{ needs.preparing_for_release.outputs.minor }}.${{ needs.preparing_for_release.outputs.patch }}
          bundle-version: ${{ needs.preparing_for_release.outputs.major }}.${{ needs.preparing_for_release.outputs.minor }}.${{ needs.preparing_for_release.outputs.patch }}

      - name: Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install tools
        run: brew install create-dmg

      - name: Build binaries
        run: dotnet publish -c Release -r osx-x64 --self-contained

      - name: Move binaries to package
        run: |
          echo "Creating app binaries directory..."
          mkdir -p src/osx-installer/SSC.app/Contents/MacOS/osx-x64
          echo "Move binaries into created directory..."
          mv src/bin/Release/net${{ env.DOTNET_VERSION }}/osx-x64/* src/osx-installer/SSC.app/Contents/MacOS/osx-x64

      - name: Set .app file as executable
        run: |
          echo "Settings app package as executable..."
          chmod +x src/osx-installer/SSC.app/Contents/MacOS/osx-x64/Skillaz.SecureChat
          
      - name: Build .dmg installer
        run: create-dmg --volname "Skillaz Secure Chat" --volicon "src/osx-installer/SSC.app/Contents/Resources/logo.icns" --icon "SSC.app" 30 60 --hide-extension "SSC.app" --app-drop-link 280 60 --no-internet-enable "Skillaz.SecureChat.${{ needs.preparing_for_release.outputs.major }}.${{ needs.preparing_for_release.outputs.minor }}.${{ needs.preparing_for_release.outputs.patch }}.osx-x64.dmg" "src/osx-installer/SSC.app"
        
      - name: Set installer icon
        run: |
          swiftc src/osx-installer/set-ex-icon.swift
          ./set-ex-icon src/osx-installer/SSC.app/Contents/Resources/logo.icns Skillaz.SecureChat.${{ needs.preparing_for_release.outputs.major }}.${{ needs.preparing_for_release.outputs.minor }}.${{ needs.preparing_for_release.outputs.patch }}.osx-x64.dmg

      - name: Publish .dmg installer
        uses: actions/upload-artifact@v3
        with:
          name: osx-x64-installer
          path: ./*.dmg
          retention-days: 1
      
  upload_installers:
    name: Upload installers to latest release
    runs-on: ubuntu-latest
    needs: [preparing_for_release, build_and_publish_windows, build_and_publish_linux, build_and_publish_macos]
    steps:
      - name: Download installers
        uses: actions/download-artifact@v3
        with:
          path: installers/

      - name: Calculate checksums
        id: checksums
        run: | 
          ls -R
          exe=$(sha512sum installers/win-x64-installer/*.exe | cut -d " " -f 1)
          echo "exe_checksum=${exe}" >> "$GITHUB_OUTPUT"
          deb=$(sha512sum installers/ubuntu-x64-installer/*.deb | cut -d " " -f 1)
          echo "deb_checksum=${deb}" >> "$GITHUB_OUTPUT"
          rpm=$(sha512sum installers/fedora-x64-installer/*.rpm | cut -d " " -f 1)
          echo "rpm_checksum=${rpm}" >> "$GITHUB_OUTPUT"
          dmg=$(sha512sum installers/osx-x64-installer/*.dmg | cut -d " " -f 1)
          echo "dmg_checksum=${dmg}" >> "$GITHUB_OUTPUT"
          
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          append_body: true
          body: |
            ## Protection
            [Validation instruction](https://picolino.dev/gpg/gpg-signing/#sha-hash)

            |Alg|File|Hash|
            |:--:|:--:|:--:|
            |SHA512|Skillaz.SecureChat.${{ needs.preparing_for_release.outputs.major }}.${{ needs.preparing_for_release.outputs.minor }}.${{ needs.preparing_for_release.outputs.patch }}.ubuntu-x64.deb|${{ steps.checksums.outputs.deb_checksum }}|
            |SHA512|Skillaz.SecureChat.${{ needs.preparing_for_release.outputs.major }}.${{ needs.preparing_for_release.outputs.minor }}.${{ needs.preparing_for_release.outputs.patch }}.fedora-x64.rpm|${{ steps.checksums.outputs.rpm_checksum }}|
            |SHA512|Skillaz.SecureChat.${{ needs.preparing_for_release.outputs.major }}.${{ needs.preparing_for_release.outputs.minor }}.${{ needs.preparing_for_release.outputs.patch }}.win-x64.exe|${{ steps.checksums.outputs.exe_checksum }}|
            |SHA512|Skillaz.SecureChat.${{ needs.preparing_for_release.outputs.major }}.${{ needs.preparing_for_release.outputs.minor }}.${{ needs.preparing_for_release.outputs.patch }}.osx-x64.dmg|${{ steps.checksums.outputs.dmg_checksum }}|
          draft: false
          prerelease: false
          files: |
            installers/ubuntu-x64-installer/*
            installers/fedora-x64-installer/*
            installers/win-x64-installer/*
            installers/osx-x64-installer/*
